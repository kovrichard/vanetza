/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "DSRC"
 * 	found in "../../cpm/F/kell/asd/with_riebl/DSRC_REG_D.asn"
 * 	`asn1c -fcompound-names -fincludes-quoted -no-gen-example`
 */

#ifndef	_ComputedLaneEU_H_
#define	_ComputedLaneEU_H_


#include "asn_application.h"

/* Including external dependencies */
#include "LaneIDEU.h"
#include "AngleEU.h"
#include "Scale-B12EU.h"
#include "DrivenLineOffsetSmEU.h"
#include "DrivenLineOffsetLgEU.h"
#include "constr_CHOICE.h"
#include "asn_SEQUENCE_OF.h"
#include "constr_SEQUENCE_OF.h"
#include "constr_SEQUENCE.h"

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum ComputedLaneEU__offsetXaxis_PR {
	ComputedLaneEU__offsetXaxis_PR_NOTHING,	/* No components present */
	ComputedLaneEU__offsetXaxis_PR_small,
	ComputedLaneEU__offsetXaxis_PR_large
} ComputedLaneEU__offsetXaxis_PR;
typedef enum ComputedLaneEU__offsetYaxis_PR {
	ComputedLaneEU__offsetYaxis_PR_NOTHING,	/* No components present */
	ComputedLaneEU__offsetYaxis_PR_small,
	ComputedLaneEU__offsetYaxis_PR_large
} ComputedLaneEU__offsetYaxis_PR;

/* Forward declarations */
struct RegionalExtensionEU;

/* ComputedLaneEU */
typedef struct ComputedLaneEU {
	LaneIDEU_t	 referenceLaneId;
	struct ComputedLaneEU__offsetXaxis {
		ComputedLaneEU__offsetXaxis_PR present;
		union ComputedLaneEU__offsetXaxis_u {
			DrivenLineOffsetSmEU_t	 small;
			DrivenLineOffsetLgEU_t	 large;
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} offsetXaxis;
	struct ComputedLaneEU__offsetYaxis {
		ComputedLaneEU__offsetYaxis_PR present;
		union ComputedLaneEU__offsetYaxis_u {
			DrivenLineOffsetSmEU_t	 small;
			DrivenLineOffsetLgEU_t	 large;
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} offsetYaxis;
	AngleEU_t	*rotateXY	/* OPTIONAL */;
	Scale_B12EU_t	*scaleXaxis	/* OPTIONAL */;
	Scale_B12EU_t	*scaleYaxis	/* OPTIONAL */;
	struct ComputedLaneEU__regional {
		A_SEQUENCE_OF(struct RegionalExtensionEU) list;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *regional;
	/*
	 * This type is extensible,
	 * possible extensions are below.
	 */
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} ComputedLaneEU_t;

/* Implementation */
extern asn_TYPE_descriptor_t asn_DEF_ComputedLaneEU;
extern asn_SEQUENCE_specifics_t asn_SPC_ComputedLaneEU_specs_1;
extern asn_TYPE_member_t asn_MBR_ComputedLaneEU_1[7];

#ifdef __cplusplus
}
#endif

/* Referred external types */
#include "RegionalExtensionEU.h"

#endif	/* _ComputedLaneEU_H_ */
#include "asn_internal.h"
